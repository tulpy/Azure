{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "companyPrefix": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 5
        },
        "locationPrefix": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 5
        },
        "environmentPrefix": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 3
        },
        "akvPrefix": {
            "type": "string",
            "defaultValue": "akv",
            "maxLength": 3
        }
    },
    "variables": {
        "namingPrefix": "[concat(parameters('companyPrefix'), '-', parameters('locationPrefix'), '-', parameters('environmentPrefix'))]",
        "keyVault": {
            "name": "[toLower(take(concat(variables('namingPrefix'), '-', parameters('akvPrefix'), '-', guid(parameters('companyPrefix'))), 24))]",
            "enabledForDeployment": true,
            "enabledForDiskEncryption": true,
            "enabledForTemplateDeployment": true,
            "enableSoftDelete": true,
            "sku": "Standard",
            "family": "A",
            "objectID": ""
        },
        "apiVersions": {
            "KeyVault": "2019-09-01"
        }
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "[variables('apiVersions').KeyVault]",
            "name": "[variables('keyVault').name]",
            "location": "[resourceGroup().location]",
            "properties": {
                "enabledForDeployment": "[variables('keyVault').enabledForDeployment]",
                "enabledForDiskEncryption": "[variables('keyVault').enabledForDiskEncryption]",
                "enabledForTemplateDeployment": "[variables('keyVault').enabledForTemplateDeployment]",
                "enableSoftDelete": "[variables('keyVault').enableSoftDelete]",
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[variables('apiVersions').KeyVault]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "sku": {
                    "name": "[variables('keyVault').sku]",
                    "family": "[variables('keyVault').family]"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": []
                }
            }
        }
    ]
}