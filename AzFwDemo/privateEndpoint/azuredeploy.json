{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all the resources."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "pls-vnet"
        },
        "subnetName": {
            "defaultValue": "pls",
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the subnet hosting the virtual machine."
            }
        },
        "subnetAddressPrefix": {
            "defaultValue": "192.168.0.0/24",
            "type": "string",
            "metadata": {
                "description": "Specifies the address prefix of the subnet hosting the virtual machine."
            }
        },
        "fileStorageAccountName": {
            "type": "string",
            "defaultValue": "[concat('file', uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "Specifies the name of the Azure Storage account hosting the File Share."
            }
        },
        "fileShareName": {
            "type": "string",
            "defaultValue": "documents",
            "minLength": 3,
            "maxLength": 63,
            "metadata": {
                "description": "Specifies the name of the File Share. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only."
            }
        },
        "shareQuota": {
            "type": "int",
            "defaultValue": 5120,
            "metadata": {
                "description": "Specifies the maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400."
            }
        },
        "fileStorageAccountPrivateEndpointName": {
            "type": "string",
            "defaultValue": "FileSharePrivateEndpoint",
            "metadata": {
                "description": "Specifies the name of the private link to the boot diagnostics storage account."
            }
        },
        "networkAclsDefaultAction": {
            "type": "string",
            "defaultValue": "Deny",
            "allowedValues": [
                "Allow",
                "Deny"
            ],
            "metadata": {
                "description": "Allow or disallow public access to all blobs or containers in the storage accounts. The default interpretation is true for this property."
            }
        },
        "allowBlobPublicAccess": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Allow or disallow public access to all blobs or containers in the storage accounts. The default interpretation is true for this property."
            }
        }
    },
    "variables": {
        "vnetAddressPrefix": "192.168.0.0/16",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "fileStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('fileStorageAccountName'))]",
        "fileShareId": "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('fileStorageAccountName'), 'default', parameters('fileShareName'))]",
        "filePublicDNSZoneForwarder": "[concat('.file.', environment().suffixes.storage)]",
        "filePrivateDnsZoneName": "[concat('privatelink', variables('filePublicDNSZoneForwarder'))]",
        "filePrivateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('filePrivateDnsZoneName'))]",
        "fileStorageAccountPrivateEndpointId": "[resourceId('Microsoft.Network/privateEndpoints', parameters('fileStorageAccountPrivateEndpointName'))]",
        "fileStorageAccountPrivateEndpointGroupName": "file",
        "filePrivateDnsZoneGroup": "[concat(parameters('fileStorageAccountPrivateEndpointName'),'/', variables('fileStorageAccountPrivateEndpointGroupName'), 'PrivateDnsZoneGroup')]"
    },
    "resources": [
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('fileStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "networkAcls": {
                    "defaultAction": "[parameters('networkAclsDefaultAction')]",
                    "bypass": "AzureServices"
                },
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('fileStorageAccountName'), '/default/', parameters('fileShareName'))]",
            "dependsOn": [
                "[variables('fileStorageAccountId')]"
            ],
            "properties": {
                "shareQuota": "[parameters('shareQuota')]"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-07-01",
            "name": "[parameters('fileStorageAccountPrivateEndpointName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('fileStorageAccountId')]",
                "[variables('fileShareId')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('fileStorageAccountPrivateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('fileStorageAccountId')]",
                            "groupIds": [
                                "[variables('fileStorageAccountPrivateEndpointGroupName')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-07-01",
            "name": "[variables('filePrivateDnsZoneGroup')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('filePrivateDnsZoneId')]",
                "[variables('fileStorageAccountPrivateEndpointId')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[variables('filePrivateDnsZoneId')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2020-06-01",
            "name": "[variables('filePrivateDnsZoneName')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('filePrivateDnsZoneName'), '/linkto-', toLower(parameters('virtualNetworkName')))]",
            "location": "global",
            "dependsOn": [
                "[variables('filePrivateDnsZoneId')]",
                "[variables('vnetId')]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[variables('vnetId')]"
                }
            }
        }
    ]
}