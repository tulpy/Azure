{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connection_name": {
            "defaultValue": "eventhubs",
            "type": "String"
        },
        "workflow_name": {
            "defaultValue": "Get-ASCData",
            "type": "String"
        },
        "GUID": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
        "ehNamespace": "[concat('eventHub-', uniqueString(parameters('GUID')))]",
        "defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('ehNamespace'), variables('defaultSASKeyName'))]",
        "apipath": "[concat('/@{encodeURIComponent(''', variables('ehNamespace'),''')}', '/events')]"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2017-04-01",
            "name": "[variables('ehNamespace')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 1
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0,
                "kafkaEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connection_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Eventhub/namespaces/', variables('ehNamespace'))]"
            ],
            "properties": {
                "displayName": "ASCData",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId  ,'/providers/Microsoft.Web/locations/',  resourceGroup().location, '/managedApis/', parameters('connection_name'))]"
                },
                "parameterValues":{
                    "connectionString": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('ehNamespace'), '/', variables('defaultSASKeyName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('ehNamespace'))]"
            ],
            "properties": {
                "rights": [
                    "Listen",
                    "Manage",
                    "Send"
                ]
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('ehNamespace'), '/', variables('ehNamespace'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', variables('ehNamespace'))]"
            ],
            "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 2,
                "status": "Active"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflow_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connection_name'))]"
            ],
            "identity": {
                "principalId": "",
                "tenantId": "",
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['value']",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "HTTP_3": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/subscriptions/@{items('For_each')?['subscriptionId']}/providers/Microsoft.Security/secureScores/ascScore?api-version=2020-01-01-preview"
                                            }
                                        },
                                        "HTTP_4": {
                                            "runAfter": {
                                                "Send_event_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "uri": "https://management.azure.com/subscriptions/@{items('For_each')?['subscriptionId']}/providers/Microsoft.Security/secureScores/ascScore/SecureScoreControls?api-version=2020-01-01-preview&$expand=definition"
                                            }
                                        },
                                        "Send_event_2": {
                                            "runAfter": {
                                                "HTTP_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(body('HTTP_3'))}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "[variables('apipath')]"
                                            }
                                        },
                                        "Send_event_3": {
                                            "runAfter": {
                                                "HTTP_4": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "ContentData": "@{base64(body('HTTP_4'))}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "[variables('apipath')]"
                                            }
                                        },
                                        "Set_variable_4": {
                                            "runAfter": {
                                                "Send_event_3": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "SecureScoreAssesmentsUri",
                                                "value": "https://management.azure.com/subscriptions/@{items('For_each')?['subscriptionId']}/providers/Microsoft.Security/assessments?api-version=2020-01-01&$expand=metadata"
                                            }
                                        },
                                        "Until": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Set_variable_5": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "SecureScoreAssesmentsUri",
                                                                "value": "@body('Parse_JSON_4')?['nextLink']"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Parse_JSON_4": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Set_variable_6": {
                                                                "runAfter": {},
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "NextPage",
                                                                    "value": "@false"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@body('Parse_JSON_4')?['nextLink']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "HTTP_5": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "@variables('SecureScoreAssesmentsUri')"
                                                    }
                                                },
                                                "Parse_JSON_4": {
                                                    "runAfter": {
                                                        "Send_event_4": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_5')",
                                                        "schema": {
                                                            "properties": {
                                                                "nextLink": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            },
                                                                            "properties": {
                                                                                "properties": {
                                                                                    "displayName": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "resourceDetails": {
                                                                                        "properties": {
                                                                                            "Id": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "Source": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    },
                                                                                    "status": {
                                                                                        "properties": {
                                                                                            "code": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        },
                                                                                        "type": "object"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "type",
                                                                            "id",
                                                                            "name",
                                                                            "properties"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Send_event_4": {
                                                    "runAfter": {
                                                        "HTTP_5": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "ContentData": "@{base64(body('HTTP_5'))}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "[variables('apipath')]"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Set_variable_4": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": "@equals(variables('NextPage'), false)",
                                            "limit": {
                                                "count": 10,
                                                "timeout": "PT1H"
                                            },
                                            "type": "Until"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_JSON_2')?['registrationState']",
                                                    "Registered"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_2": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "https://management.azure.com/subscriptions/@{items('For_each')?['subscriptionId']}/providers/Microsoft.Security?api-version=2019-10-01"
                                    }
                                },
                                "Parse_JSON_2": {
                                    "runAfter": {
                                        "HTTP_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP_2')",
                                        "schema": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "namespace": {
                                                    "type": "string"
                                                },
                                                "registrationPolicy": {
                                                    "type": "string"
                                                },
                                                "registrationState": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions?api-version=2020-01-01"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NextPage",
                                        "type": "boolean",
                                        "value": "@true"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SecureScoreAssesmentsUri",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "test",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Send_event": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "authorizationSource": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "managedByTenants": {
                                                        "items": {
                                                            "properties": {
                                                                "tenantId": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "tenantId"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "subscriptionId": {
                                                        "type": "string"
                                                    },
                                                    "subscriptionPolicies": {
                                                        "properties": {
                                                            "locationPlacementId": {
                                                                "type": "string"
                                                            },
                                                            "quotaId": {
                                                                "type": "string"
                                                            },
                                                            "spendingLimit": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tenantId": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "authorizationSource",
                                                    "managedByTenants",
                                                    "subscriptionId",
                                                    "tenantId",
                                                    "displayName",
                                                    "state",
                                                    "subscriptionPolicies"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_event": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "ContentData": "@{base64(body('HTTP'))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['eventhubs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "[variables('apipath')]"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "eventhubs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connection_name'))]",
                                "connectionName": "eventhubs",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId  ,'/providers/Microsoft.Web/locations/',  resourceGroup().location, '/managedApis/eventhubs')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('ehNamespace'), '/', variables('ehNamespace'), '/', variables('defaultSASKeyName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', variables('ehNameSpace'), variables('ehNamespace'))]",
                "[resourceId('Microsoft.EventHub/namespaces', variables('ehNameSpace'))]"
            ],
            "properties": {
                "rights": [
                    "Manage",
                    "Listen",
                    "Send"
                ]
            }
        }
    ]
}