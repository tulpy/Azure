{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This playbook is for workflow automation.  It will resolve the Enable the built-in vulnerability assessment solution on virtual machines (powered by Qualys) (Preview) recommendation",
        "author": "Nicholas DiCola"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Install-VulnAssesmentAgent",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
        "ARMConnectionName": "[concat('arm-', parameters('PlaybookName'))]",
        "ASCAssesmentConnectionName": "[concat('ascassessment-', parameters('PlaybookName'))]"


    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ARMConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ASCAssesmentConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascassessment')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('ARMConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('ASCAssesmentConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Recommendation_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascassessment']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Assessment/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Set_variable": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Type",
                                        "value": "@{concat(variables('ResourceProvider'), '/virtualmachines')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_variable_2": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "Type",
                                            "value": "@{concat(variables('ResourceProvider'), '/machines')}"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('ResourceProvider')",
                                            "Microsoft.Compute"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_or_update_a_template_deployment": {
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "mode": "Incremental",
                                        "template": {
                                            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                            "contentVersion": "1.0.0.0",
                                            "resources": [
                                                {
                                                    "apiVersion": "2015-06-01-preview",
                                                    "name": "[[concat('@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[8]}', '/Microsoft.Security/default')]",
                                                    "type": "@{variables('Type')}/providers/serverVulnerabilityAssessments"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['arm']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "[concat('/subscriptions/@{encodeURIComponent(split(triggerBody()?[''properties'']?[''resourceDetails'']?[''id''], ''/'')[2])}/resourcegroups/@{encodeURIComponent(split(triggerBody()?[''properties'']?[''resourceDetails'']?[''id''], ''/'')[4])}/providers/Microsoft.Resources/deployments/@{encodeURIComponent(''', parameters('PlaybookName'), ''')}')]",
                                "queries": {
                                    "wait": true,
                                    "x-ms-api-version": "2016-06-01"
                                }
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResourceProvider",
                                        "type": "string",
                                        "value": "@{split(triggerBody()?['properties']?['resourceDetails']?['id'], '/')[6]}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Type",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "arm": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ARMConnectionName'))]",
                                "connectionName": "[variables('ARMConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
                            },
                            "ascassessment": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ASCAssesmentConnectionName'))]",
                                "connectionName": "[variables('ASCAssesmentConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascassessment')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
