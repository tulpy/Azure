{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This Logic App for Workflow Automations will notify ASC generated threat alerts to RBAC assigned Owners and Contributors both user and mail enabled security groups on the Azure Resource.",
        "author": "Nathan Swift"
    },    
    "parameters": {
        "LogicAppName": {
            "defaultValue": "Notify-ASCAlertsAzureResource",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "AADTenantID": {
            "defaultValue": "Your AAD Tenant ID",
            "type": "string"
        }
    },
    "variables": {
        "ascalertConnectionName": "[concat('ascalert-', parameters('LogicAppName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('LogicAppName'))]"        
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ascalertConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "RoleDefintionID": {
                            "defaultValue": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                            "type": "String"
                        },
                        "TenantID": {
                            "defaultValue": "[parameters('AADTenantID')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Filter_array": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('HTTP')?['value']",
                                "where": "@or(contains(item()?['properties']?['roleDefinitionId'], '8e3af657-a8ff-443c-a75c-2fe8c4bcb635'), contains(item()?['properties']?['roleDefinitionId'], 'b24988ac-6180-42a0-ab88-20f7382dd24c'))"
                            }
                        },
                        "Filter_array_2": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('HTTP_2')?['value']",
                                "where": "@or(not(equals(item()?['mail'], null)), not(equals(item()?['otherMails'], null)))"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Filter_array')",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "simpleassignarray",
                                        "value": "@items('For_each')?['properties']?['principalId']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('Filter_array_2')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_string_variable": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "emailstring",
                                                "value": "@{items('For_each_2')?['mail']};"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "For_each_3": {
                                                "foreach": "@items('For_each_2')?['otherMails']",
                                                "actions": {
                                                    "Condition_2": {
                                                        "actions": {
                                                            "Append_to_string_variable_2": {
                                                                "runAfter": {},
                                                                "type": "AppendToStringVariable",
                                                                "inputs": {
                                                                    "name": "emailstring",
                                                                    "value": "@{items('For_each_3')};"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@items('For_each_3')",
                                                                            "@null"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                },
                                                "runAfter": {},
                                                "type": "Foreach"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@items('For_each_2')?['mail']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Filter_array_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/@{triggerBody()?['AzureResourceId']}/providers/Microsoft.Authorization/roleAssignments?api-version=2018-09-01-preview"
                            }
                        },
                        "HTTP_2": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.windows.net/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "includeDirectoryObjectReferences": true,
                                    "objectIds": "@variables('simpleassignarray')",
                                    "types": [
                                        "user",
                                        "group"
                                    ]
                                },
                                "method": "POST",
                                "uri": "https://graph.windows.net/@{parameters('TenantID')}/getObjectsByObjectIds?api-version=1.6"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "simpleassignarray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "HTTP_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailstring",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>Azure Security Center has discovered a potential security threat in your environment. Details below:<br>\n<br>\nAlert name: @{triggerBody()?['AlertDisplayName']}<br>\n<br>\nAttacked resource: @{triggerBody()?['CompromisedEntity']}<br>\n<br>\nAlert severity: @{triggerBody()?['Severity']}<br>\n<br>\nDetection time: @{triggerBody()?['TimeGenerated']}<br>\n<br>\nDescription: @{triggerBody()?['Description']}<br>\n<br>\nDetected by: @{triggerBody()?['VendorName']}<br>\n<br>\nAlert ID: @{triggerBody()?['SystemAlertId']}<br>\n<br>\nResource identifiers: @{json(string(triggerBody()?['ResourceIdentifiers']))}<br>\n<br>\nLink to view alert in Azure Security Center: @{triggerBody()?['AlertUri']}</p>",
                                    "Importance": "High",
                                    "Subject": "Azure Security Center has discovered a potential security threat in your environment",
                                    "To": "@variables('emailstring')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "office365",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "ascalert": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                                "connectionName": "ascalert",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}