{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook will send an email asking for approval, upon approval the playbook will remove the blob from storage account and container that was alerted in ASC. Be sure to turn on Storage Account Soft Delete to recover blobs if needed.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Ask-Remove-MalwareBlob",
            "type": "string"
        },
        "Sender": {
            "defaultValue": "<username>@<domain> - the email will be sent on behalf of this email address",
            "type": "string"
        },
        "Recipient": {
            "defaultValue": "<SOCDistro>@<domain> - will approve or reject the deletion",
            "type": "string"
        }
    },
    "variables": {
        "ascalertConnectionName": "[concat('ascalert-', parameters('PlaybookName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Sender')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ascalertConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Sender')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "SOCEmailAddress": {
                            "defaultValue": "[parameters('Recipient')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "If_request_approved": {
                            "actions": {
                                "Delete_Blob": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://@{triggerBody()?['CompromisedEntity']}.blob.core.windows.net/",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "headers": {
                                            "x-ms-version": "2019-07-07"
                                        },
                                        "method": "DELETE",
                                        "uri": "@variables('BlobUri')"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "Send_an_email_(V2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://management.azure.com",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "POST",
                                        "uri": "https://management.azure.com/subscriptions/@{first(skip(split(triggerBody()?['AzureResourceId'],'/'),2))}/resourceGroups/@{first(skip(split(triggerBody()?['AzureResourceId'],'/'),4))}/providers/Microsoft.Security/locations/centralus/alerts/@{triggerBody()?['SystemAlertId']}/dismiss?api-version=2019-01-01"
                                    }
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "Delete_Blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>Youâ€™ve successfully mitigated a potential malware attack<br>\n<br>\nBlob &nbsp;@{triggerBody()?['ExtendedProperties']?['Blob']} was successfully deleted following your request</p>",
                                            "Importance": "High",
                                            "Subject": "Blob  @{triggerBody()?['ExtendedProperties']?['Blob']} was successfully deleted following your request",
                                            "To": "@parameters('SOCEmailAddress')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "Send_approval_email": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Send_approval_email')?['SelectedOption']",
                                            "Delete"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_Blob_Uri": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BlobUri",
                                        "type": "string",
                                        "value": "https://@{triggerBody()?['CompromisedEntity']}.blob.core.windows.net/@{triggerBody()?['ExtendedProperties']?['Container']}/@{triggerBody()?['ExtendedProperties']?['Blob']}"
                                    }
                                ]
                            }
                        },
                        "Send_approval_email": {
                            "runAfter": {
                                "Initialize_Blob_Uri": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "Message": {
                                        "Body": "<p>This email is sent by a playbook run on your subscription</p>\n<p>&nbsp;</p>\n<p>@{triggerBody()?['Description']}</p>\n<p>&nbsp;</p>\n<p>Storage Account: @{triggerBody()?['CompromisedEntity']}</p>\n<p>Container: @{triggerBody()?['ExtendedProperties']?['Container']}</p>\n<p>Blob name: @{triggerBody()?['ExtendedProperties']?['Blob']}</p>\n<p>Detected by: @{triggerBody()?['AlertType']}</p>\n<p>&nbsp;</p>\n<a href=\"@{triggerBody()?['AlertUri']}\">More details can be found here</a>\n<p>&nbsp;</p>\nAlternatively, you can remediate this manually:\nGo to Azure Portal, and delete blob @{triggerBody()?['ExtendedProperties']?['Blob']}  in storage account @{triggerBody()?['CompromisedEntity']}\n<p>&nbsp;</p>\n<p><strong>Delete Blob ?</strong></p>\n",
                                        "Importance": "High",
                                        "Options": "Delete, Ignore",
                                        "Subject": "Blob deletion request - a potential security threat on @{triggerBody()?['CompromisedEntity']}",
                                        "To": "@parameters('SOCEmailAddress')",
                                        "UseOnlyHTMLMessage": true
                                    },
                                    "NotificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "path": "/approvalmail/$subscriptions"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "ascalert": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                                "connectionName": "[variables('ascalertConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "[variables('office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}