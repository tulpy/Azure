{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook will generate a ISOLATE Subnet, A Deny All NSG and place on ISOLATE Subnet, It will place the Azure VM on ISOLATE Subnet restarting and dropping any persisted connections, It will generate a PIP and Azure Bastion Host.",
        "author": "Nathan Swift"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Isolate-ASCAlertAzureVM",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "EmailContact": {
            "defaultValue": "emailaddressofsecurityteam@domain.com",
            "type": "string"
        }
    },
    "variables": {
        "ascalertConnectionName": "[concat('ascalert-', parameters('PlaybookName'))]",
        "office365ConnectionName": "[concat('office365-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('ascalertConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
            ],
            "tags": {
                "LogicAppsCategory": "security"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "subnetnameisolation": {
                            "defaultValue": "ISOLATE",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_an_Azure_Security_Center_Alert_is_created_or_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['ascalert']['connectionId']"
                                    }
                                },
                                "path": "/Microsoft.Security/Alert/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Condition_5": {
                                    "actions": {},
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "HTTP_13": {
                                                "runAfter": {
                                                    "Set_variable_12": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Http",
                                                "inputs": {
                                                    "authentication": {
                                                        "audience": "https://management.azure.com/",
                                                        "type": "ManagedServiceIdentity"
                                                    },
                                                    "body": "@variables('NSGObj')",
                                                    "method": "PUT",
                                                    "uri": "https://management.azure.com/subscriptions/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -9)]}/resourceGroups/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -7)]}/providers/Microsoft.Network/virtualNetworks/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -3)]}/subnets/ISOLATE?api-version=2019-11-01"
                                                },
                                                "description": "Place the newly created NSG on the existing Subnet ISOLATE"
                                            },
                                            "Set_variable_12": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "NSGObj",
                                                    "value": {
                                                        "name": "ISOLATE",
                                                        "properties": {
                                                            "addressPrefix": "100.64.0.0/25",
                                                            "networkSecurityGroup": {
                                                                "id": "@{variables('nsgid')}"
                                                            }
                                                        }
                                                    }
                                                },
                                                "description": "Variable Object with the newly created NSG Resource Id to be used in a Update call for Subnet ISOLATE"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('Parse_JSON')?['properties']?['networkSecurityGroup']?['id']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "Conditional check for Subnet ISOLATE to ensure their is a NSG, If not apply the newly created NSG to subnet"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_5": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Append_to_array_variable": {
                                        "runAfter": {
                                            "Set_variable_3": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                            "name": "subnets",
                                            "value": {
                                                "name": "ISOLATE",
                                                "properties": {
                                                    "addressPrefix": "100.64.0.0/25",
                                                    "networkSecurityGroup": {
                                                        "id": "@{variables('nsgid')}"
                                                    }
                                                }
                                            }
                                        },
                                        "description": "Add additional subnet to be created for isolation of the Azure VM"
                                    },
                                    "Append_to_array_variable_2": {
                                        "runAfter": {
                                            "Append_to_array_variable": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                            "name": "subnets",
                                            "value": {
                                                "name": "AzureBastionSubnet",
                                                "properties": {
                                                    "addressPrefix": "100.64.0.128/25"
                                                }
                                            }
                                        },
                                        "description": "Add additional subnet to be created for Azure Bastion Host"
                                    },
                                    "HTTP_4": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                            "authentication": {
                                                "audience": "https://management.azure.com/",
                                                "type": "ManagedServiceIdentity"
                                            },
                                            "method": "GET",
                                            "uri": "https://management.azure.com/subscriptions/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -9)]}/resourceGroups/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -7)]}/providers/Microsoft.Network/virtualNetworks/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -3)]}?api-version=2019-11-01"
                                        },
                                        "description": "Obtain the Azure VNET and Subnet information from where the Azure VM is Hosted"
                                    },
                                    "HTTP_5": {
                                        "runAfter": {
                                            "Set_variable_2": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Http",
                                        "inputs": {
                                            "authentication": {
                                                "audience": "https://management.azure.com/",
                                                "type": "ManagedServiceIdentity"
                                            },
                                            "method": "GET",
                                            "uri": "https://management.azure.com/subscriptions/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -9)]}/resourceGroups/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -7)]}/providers/Microsoft.Network/virtualNetworks/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -3)]}/subnets?api-version=2019-11-01"
                                        },
                                        "description": "Obtain the existing Subnets within the Azure VNET where Azure VM is in"
                                    },
                                    "HTTP_6": {
                                        "runAfter": {
                                            "Append_to_array_variable_2": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Http",
                                        "inputs": {
                                            "authentication": {
                                                "audience": "https://management.azure.com/",
                                                "type": "ManagedServiceIdentity"
                                            },
                                            "body": {
                                                "location": "@{body('HTTP_2')?['location']}",
                                                "properties": {
                                                    "addressSpace": {
                                                        "addressPrefixes": [
                                                            "@{variables('ipaddrprefix')}",
                                                            "100.64.0.0/24"
                                                        ]
                                                    },
                                                    "subnets": "@variables('subnets')"
                                                }
                                            },
                                            "method": "PUT",
                                            "uri": "https://management.azure.com/subscriptions/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -9)]}/resourceGroups/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -7)]}/providers/Microsoft.Network/virtualNetworks/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -3)]}?api-version=2019-11-01"
                                        },
                                        "description": "Update the Azure VM's VNET\\Subnets by adding 100.64.0.0/24 as an additional prefix for and ISOLATE - 100.64.0.0/25 and AzureBastionSubnet 100.64.0.128/25. The VM and Azure Bastion Host will be created here in this pocket networking area isolated"
                                    },
                                    "Parse_JSON_2": {
                                        "runAfter": {
                                            "HTTP_5": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "ParseJson",
                                        "inputs": {
                                            "content": "@body('HTTP_5')",
                                            "schema": {
                                                "properties": {
                                                    "value": {
                                                        "items": {
                                                            "properties": {
                                                                "etag": {
                                                                    "type": "string"
                                                                },
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "properties": {
                                                                    "properties": {
                                                                        "addressPrefix": {
                                                                            "type": "string"
                                                                        },
                                                                        "delegations": {
                                                                            "type": "array"
                                                                        },
                                                                        "ipConfigurations": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "id"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "privateEndpointNetworkPolicies": {
                                                                            "type": "string"
                                                                        },
                                                                        "privateLinkServiceNetworkPolicies": {
                                                                            "type": "string"
                                                                        },
                                                                        "provisioningState": {
                                                                            "type": "string"
                                                                        },
                                                                        "serviceEndpoints": {
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "name",
                                                                "id",
                                                                "etag",
                                                                "properties",
                                                                "type"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "description": "Parse JSON of getting the Subnets and values"
                                    },
                                    "Set_variable_2": {
                                        "runAfter": {
                                            "HTTP_4": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "ipaddrprefix",
                                            "value": "@{body('HTTP_4')?['properties']?['addressSpace']?['addressPrefixes'][0]}"
                                        },
                                        "description": "Update a variable with the ip address space prefix of the Azure VNET, existing VNETs must be passed when updating a Azure VNET with a new address space"
                                    },
                                    "Set_variable_3": {
                                        "runAfter": {
                                            "Parse_JSON_2": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "subnets",
                                            "value": "@body('HTTP_5')?['value']"
                                        },
                                        "description": "Add existing subnets from vnets to be used later when updating a VNET you must pass existing subnets and address space prefixes"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_JSON')?['properties']?['provisioningState']",
                                            "Succeeded"
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Conditional Check to see if a ISOLATE Subnet exists if it does do not Update existing VNET"
                        },
                        "Condition_2": {
                            "actions": {
                                "Condition_3": {
                                    "actions": {
                                        "Set_variable_6": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "nicputrequest",
                                                "value": {
                                                    "location": "@{body('HTTP_2')?['location']}",
                                                    "properties": {
                                                        "ipConfigurations": [
                                                            {
                                                                "name": "ipconfig1",
                                                                "properties": {
                                                                    "publicIPAddress": {
                                                                        "id": "@{body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['publicIPAddress']?['id']}"
                                                                    },
                                                                    "subnet": {
                                                                        "id": "@{variables('isolatesubnetid')}"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "networkSecurityGroup": {
                                                            "id": "@{body('HTTP_2')?['properties']?['networkSecurityGroup']?['id']}"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Set_variable_7": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "nicputrequest",
                                                    "value": {
                                                        "location": "@{body('HTTP_2')?['location']}",
                                                        "properties": {
                                                            "ipConfigurations": [
                                                                {
                                                                    "name": "ipconfig1",
                                                                    "properties": {
                                                                        "publicIPAddress": {
                                                                            "id": "@{body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['publicIPAddress']?['id']}"
                                                                        },
                                                                        "subnet": {
                                                                            "id": "@{variables('isolatesubnetid')}"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['publicIPAddress']?['id']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Condition": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Condition_4": {
                                        "actions": {
                                            "Set_variable_9": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "nicputrequest",
                                                    "value": {
                                                        "location": "@{body('HTTP_2')?['location']}",
                                                        "properties": {
                                                            "ipConfigurations": [
                                                                {
                                                                    "name": "ipconfig1",
                                                                    "properties": {
                                                                        "subnet": {
                                                                            "id": "@{variables('isolatesubnetid')}"
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "networkSecurityGroup": {
                                                                "id": "@{body('HTTP_2')?['properties']?['networkSecurityGroup']?['id']}"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "runAfter": {},
                                        "else": {
                                            "actions": {
                                                "Set_variable_10": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "nicputrequest",
                                                        "value": {
                                                            "location": "@{body('HTTP_2')?['location']}",
                                                            "properties": {
                                                                "ipConfigurations": [
                                                                    {
                                                                        "name": "ipconfig1",
                                                                        "properties": {
                                                                            "subnet": {
                                                                                "id": "@{variables('isolatesubnetid')}"
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "equals": [
                                                            "@body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['networkSecurityGroup']?['id']",
                                                            "@null"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['publicIPAddress']?['id']",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Conditional logic to produce the correct JSON Object for a VM NIC PUT request to update the VM's NIC to Isolate Subnet while perserving existing NSGs or PIPs on the NIC"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable_10": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/@{triggerBody()?['AzureResourceId']}?api-version=2019-07-01"
                            },
                            "description": "Obtain information on the Azure VM"
                        },
                        "HTTP_10": {
                            "runAfter": {
                                "Set_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "location": "@{body('HTTP_2')?['location']}"
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{split(body('HTTP_2')?['id'], '/')[add(length(split(body('HTTP_2')?['id'], '/')), -7)]}/resourcegroups/@{variables('rgname')}?api-version=2019-10-01"
                            },
                            "description": "Create a Resource Group for the NSG, PIP, and Azure Bastion Host. This way once the forenscis are completed and VM moved back to the proper Subnet you can delete the extra resources if desired"
                        },
                        "HTTP_11": {
                            "runAfter": {
                                "Condition_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": "@variables('nicputrequest')",
                                "method": "PUT",
                                "uri": "https://management.azure.com/@{body('HTTP')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}?api-version=2019-11-01"
                            },
                            "description": "Move the Azure VM to a the ISOLATE Subnet that has a NSG applied, VM restarts dropping any persistent connections"
                        },
                        "HTTP_2": {
                            "runAfter": {
                                "Switch": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/@{body('HTTP')?['properties']?['networkProfile']?['networkInterfaces'][0]?['id']}?api-version=2019-07-01"
                            },
                            "description": "Obtain VM NIC level details, does the NIC have a PIP, a NSG attached to it, what subnet is it in."
                        },
                        "HTTP_3": {
                            "runAfter": {
                                "HTTP_7": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "https://management.azure.com/@{variables('isolatesubnetid')}?api-version=2019-11-01"
                            },
                            "description": "Try and see if their is a Subnet called ISOLATE in the Azure VNET."
                        },
                        "HTTP_7": {
                            "runAfter": {
                                "HTTP_10": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "location": "@{body('HTTP_2')?['location']}",
                                    "properties": {
                                        "securityRules": [
                                            {
                                                "name": "Port_AnyInbound",
                                                "properties": {
                                                    "access": "Deny",
                                                    "destinationAddressPrefix": "*",
                                                    "destinationAddressPrefixes": [],
                                                    "destinationPortRange": "*",
                                                    "destinationPortRanges": [],
                                                    "direction": "Inbound",
                                                    "priority": 1000,
                                                    "protocol": "*",
                                                    "sourceAddressPrefix": "*",
                                                    "sourceAddressPrefixes": [],
                                                    "sourcePortRange": "*",
                                                    "sourcePortRanges": []
                                                }
                                            },
                                            {
                                                "name": "Port_Bastion@{variables('OSPort')}",
                                                "properties": {
                                                    "access": "Allow",
                                                    "destinationAddressPrefix": "*",
                                                    "destinationAddressPrefixes": [],
                                                    "destinationPortRange": "@{variables('OSPort')}",
                                                    "destinationPortRanges": [],
                                                    "direction": "Inbound",
                                                    "priority": 2000,
                                                    "protocol": "*",
                                                    "sourceAddressPrefix": "100.64.0.128/25",
                                                    "sourceAddressPrefixes": [],
                                                    "sourcePortRange": "*",
                                                    "sourcePortRanges": []
                                                }
                                            },
                                            {
                                                "name": "Port_AnyOutbound",
                                                "properties": {
                                                    "access": "Deny",
                                                    "destinationAddressPrefix": "*",
                                                    "destinationAddressPrefixes": [],
                                                    "destinationPortRange": "*",
                                                    "destinationPortRanges": [],
                                                    "direction": "Outbound",
                                                    "priority": 1000,
                                                    "protocol": "*",
                                                    "sourceAddressPrefix": "*",
                                                    "sourceAddressPrefixes": [],
                                                    "sourcePortRange": "*",
                                                    "sourcePortRanges": []
                                                }
                                            }
                                        ]
                                    }
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{split(body('HTTP_2')?['id'], '/')[add(length(split(body('HTTP_2')?['id'], '/')), -7)]}/resourceGroups/@{variables('rgname')}/providers/Microsoft.Network/networkSecurityGroups/@{variables('newguid')}-NSG?api-version=2019-11-01"
                            },
                            "description": "Create a Azure NSG with deny all and a allow on OS management port, security personnel still needs to change rule priority to below 1000 to connect from Azure Bastion Host "
                        },
                        "HTTP_8": {
                            "runAfter": {
                                "HTTP_11": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "location": "@{body('HTTP_2')?['location']}",
                                    "properties": {
                                        "idleTimeoutInMinutes": 10,
                                        "publicIPAddressVersion": "IPv4",
                                        "publicIPAllocationMethod": "Static"
                                    },
                                    "sku": {
                                        "name": "Standard"
                                    }
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{split(body('HTTP_2')?['id'], '/')[add(length(split(body('HTTP_2')?['id'], '/')), -7)]}/resourceGroups/@{variables('rgname')}/providers/Microsoft.Network/publicIPAddresses/@{variables('newguid')}-PIP?api-version=2019-11-01"
                            },
                            "description": "Generate a Azure Public IP for a Azure Bastion Host"
                        },
                        "HTTP_9": {
                            "runAfter": {
                                "Initialize_variable_7": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://management.azure.com/",
                                    "type": "ManagedServiceIdentity"
                                },
                                "body": {
                                    "location": "@{body('HTTP_2')?['location']}",
                                    "properties": {
                                        "ipConfigurations": [
                                            {
                                                "name": "bastionHostIpConfiguration",
                                                "properties": {
                                                    "publicIPAddress": {
                                                        "id": "@{variables('pipid')}"
                                                    },
                                                    "subnet": {
                                                        "id": "/subscriptions/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -9)]}/resourceGroups/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -7)]}/providers/Microsoft.Network/virtualNetworks/@{split(variables('isolatesubnetid'), '/')[add(length(split(variables('isolatesubnetid'), '/')), -3)]}/subnets/AzureBastionSubnet"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "method": "PUT",
                                "uri": "https://management.azure.com/subscriptions/@{split(body('HTTP_2')?['id'], '/')[add(length(split(body('HTTP_2')?['id'], '/')), -7)]}/resourceGroups/@{variables('rgname')}/providers/Microsoft.Network/bastionHosts/bastion-@{variables('newguid')}-host?api-version=2019-11-01"
                            },
                            "description": "Create a Azure Bastion Host to be used for forensics for VM in ISOLATE subnet"
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "isolatesubnetid",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            },
                            "description": "This string variable will be used to check for a subnet named ISOLATE and will be used in other areas."
                        },
                        "Initialize_variable_10": {
                            "runAfter": {
                                "Initialize_variable_9": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NSGObj",
                                        "type": "object",
                                        "value": {}
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_11": {
                            "runAfter": {
                                "HTTP_9": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "connecturl",
                                        "type": "string",
                                        "value": "https://portal.azure.com/#resource@{triggerBody()?['AzureResourceId']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "newguid",
                                        "type": "string",
                                        "value": "@{guid()}"
                                    }
                                ]
                            },
                            "description": "new GUID geenrated for RG and NSG, PIP, and Azure Bastion Host that will be created"
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ipaddrprefix",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            },
                            "description": "This variable will be used to store the existing VNETs ip address space with prefix will be passed on later."
                        },
                        "Initialize_variable_4": {
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "subnets",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            },
                            "description": "This variable will be used to pass in existing subnets from the VNET but also put in new subnets ISOLATE and AzureBastionSubnet"
                        },
                        "Initialize_variable_5": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "nsgid",
                                        "type": "string",
                                        "value": "@{body('HTTP_7')?['id']}"
                                    }
                                ]
                            },
                            "description": "Set variable with the newly created NSG's Azure Resource ID to be used later."
                        },
                        "Initialize_variable_6": {
                            "runAfter": {
                                "Initialize_variable_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OSPort",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            },
                            "description": "Used to store the VM types management port 22 SSH Linux or 3389 RDP for Windows"
                        },
                        "Initialize_variable_7": {
                            "runAfter": {
                                "HTTP_8": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "pipid",
                                        "type": "string",
                                        "value": "@{body('HTTP_8')?['id']}"
                                    }
                                ]
                            },
                            "description": "Output public ip address Azure Resource Id to be used to create Azure Bastion Host"
                        },
                        "Initialize_variable_8": {
                            "runAfter": {
                                "Initialize_variable_6": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "rgname",
                                        "type": "string",
                                        "value": "rg@{variables('newguid')}"
                                    }
                                ]
                            },
                            "description": "this variable will be used to generate a RG name and will be passed in several calls to create PIP, NSG, and Azure Bastion Host"
                        },
                        "Initialize_variable_9": {
                            "runAfter": {
                                "Initialize_variable_8": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "nicputrequest",
                                        "type": "object",
                                        "value": {}
                                    }
                                ]
                            },
                            "description": "This variable will contain JSON body for the VM NIC update to ISOLATE subnet"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP_3": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_3')",
                                "schema": {
                                    "properties": {
                                        "etag": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "addressPrefix": {
                                                    "type": "string"
                                                },
                                                "delegations": {
                                                    "type": "array"
                                                },
                                                "ipConfigurations": {
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "networkSecurityGroup": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "privateEndpointNetworkPolicies": {
                                                    "type": "string"
                                                },
                                                "privateLinkServiceNetworkPolicies": {
                                                    "type": "string"
                                                },
                                                "provisioningState": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_JSON_3": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "diagnosticsProfile": {
                                                    "properties": {
                                                        "bootDiagnostics": {
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "storageUri": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "hardwareProfile": {
                                                    "properties": {
                                                        "vmSize": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "networkProfile": {
                                                    "properties": {
                                                        "networkInterfaces": {
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "id"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "osProfile": {
                                                    "properties": {
                                                        "adminUsername": {
                                                            "type": "string"
                                                        },
                                                        "allowExtensionOperations": {
                                                            "type": "boolean"
                                                        },
                                                        "computerName": {
                                                            "type": "string"
                                                        },
                                                        "linuxConfiguration": {
                                                            "properties": {
                                                                "disablePasswordAuthentication": {
                                                                    "type": "boolean"
                                                                },
                                                                "provisionVMAgent": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requireGuestProvisionSignal": {
                                                            "type": "boolean"
                                                        },
                                                        "secrets": {
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "provisioningState": {
                                                    "type": "string"
                                                },
                                                "storageProfile": {
                                                    "properties": {
                                                        "dataDisks": {
                                                            "type": "array"
                                                        },
                                                        "imageReference": {
                                                            "properties": {
                                                                "exactVersion": {
                                                                    "type": "string"
                                                                },
                                                                "offer": {
                                                                    "type": "string"
                                                                },
                                                                "publisher": {
                                                                    "type": "string"
                                                                },
                                                                "sku": {
                                                                    "type": "string"
                                                                },
                                                                "version": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "osDisk": {
                                                            "properties": {
                                                                "caching": {
                                                                    "type": "string"
                                                                },
                                                                "createOption": {
                                                                    "type": "string"
                                                                },
                                                                "managedDisk": {
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "osType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "vmId": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "resources": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "properties": {
                                                            "autoUpgradeMinorVersion": {
                                                                "type": "boolean"
                                                            },
                                                            "provisioningState": {
                                                                "type": "string"
                                                            },
                                                            "publisher": {
                                                                "type": "string"
                                                            },
                                                            "settings": {
                                                                "properties": {
                                                                    "workspaceId": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "typeHandlerVersion": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tags": {
                                                        "properties": {
                                                            "creationDate": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "id",
                                                    "type",
                                                    "location",
                                                    "properties"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "tags": {
                                            "properties": {
                                                "creationDate": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "description": "Parse the Azure VM information for OS Disk Type"
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Initialize_variable_11": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>Azure Security Center has discovered a potential security threat in your environment and has isolated your Azure VM. Details below:<br>\n<br>\nAlert name: @{triggerBody()?['AlertDisplayName']}<br>\n<br>\nAttacked resource: @{triggerBody()?['CompromisedEntity']}<br>\n<br>\nAlert severity: @{triggerBody()?['Severity']}<br>\n<br>\nDetection time: @{triggerBody()?['TimeGenerated']}<br>\n<br>\nDescription: @{triggerBody()?['Description']}<br>\n<br>\nDetected by: @{triggerBody()?['VendorName']}<br>\n<br>\nAlert ID: @{triggerBody()?['SystemAlertId']}<br>\n<br>\nResource identifiers: @{json(string(triggerBody()?['ResourceIdentifiers']))}<br>\n<br>\nLink to view alert in Azure Security Center: @{triggerBody()?['AlertUri']}<br>\n<br>\nConnect to Isolated VM: @{split(triggerBody()?['AzureResourceId'], '/')[add(length(split(triggerBody()?['AzureResourceId'], '/')), -1)]} via Links below:<br>\n<strong>Bastion: </strong><strong>@{variables('connecturl')}</strong><strong>/connect</strong><br>\n<br>\n<strong>Serial: </strong><strong>@{variables('connecturl')}</strong><strong>/serialConsole</strong></p>",
                                    "Importance": "High",
                                    "Subject": "Azure Security Center has isolated a Azure VM due to a potential security threat in your environment",
                                    "To": "[parameters('EmailContact')]"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        },
                        "Set_variable": {
                            "runAfter": {
                                "HTTP_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "isolatesubnetid",
                                "value": "@{replace(body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['subnet']?['id'], split(body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['subnet']?['id'], '/')[add(length(split(body('HTTP_2')?['properties']?['ipConfigurations'][0]?['properties']?['subnet']?['id'], '/')), -1)], parameters('subnetnameisolation'))}"
                            },
                            "description": "Obtain the VNET resource ID and replace in the ISOLATE subnet. This variable will be used through out the Logic App"
                        },
                        "Switch": {
                            "runAfter": {
                                "Parse_JSON_3": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case": {
                                    "case": "Linux",
                                    "actions": {
                                        "Set_variable_4": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "OSPort",
                                                "value": "22"
                                            },
                                            "description": "Azure Linux VM - 22 - ssh"
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "Windows",
                                    "actions": {
                                        "Set_variable_5": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "OSPort",
                                                "value": "3389"
                                            },
                                            "description": "Azure Windows VM - 3389 - rdp"
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@body('Parse_JSON_3')?['properties']?['storageProfile']?['osDisk']?['osType']",
                            "type": "Switch",
                            "description": "Find OS Disk Type Linux or Windows and set the OSType variable accordingly for the Azure VM management port 22 or 3389"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                "connectionName": "[variables('office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "ascalert": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('ascalertConnectionName'))]",
                                "connectionName": "[variables('ascalertConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/ascalert')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}